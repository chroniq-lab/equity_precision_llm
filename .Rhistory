mutate(pmid = as.numeric(pmid))
# Filter out PMIDs that appear in any of the screened datasets
df_filtered <- final_df %>%
dplyr::filter(!pmid %in% c(training_screened_df$PMID,
dev_screened_df$PMID,
test_screened_df$PMID))
# Define file path
writexl::write_xlsx(df_filtered,paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Unattributable Data.xlsx")  )
# Define file path
write_csv(df_filtered,paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Unattributable Data.csv")  )
source("C:/code/external/equity_precision_llm/data/epldat04 creating the unattributable set.R", echo=TRUE)
names(test_screened_df)
names(df_filtered)
# Merge the three data frames on 'pmid'
final_df <- df_combined %>%
left_join(epan03_abstracts %>%
dplyr::select(pmid,abstract), by = "pmid") %>%
left_join(epan03_titles, by = "pmid") %>%
dplyr::filter(year >= 2010) %>%
mutate(across(everything(), ~replace(., . %in% c(NA, "NA"), "N/A"))) %>%
mutate(pmid = as.numeric(pmid)) %>%
rename(PMID = pmid,
Title = title,
Abstract = abstract)
### Remove training, dev, and test data duplicates
library(readxl)
# Load the three screened datasets from CSV files
training_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/Methods.xlsx"), sheet = "Training Data")
dev_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Development Data.xlsx"),sheet="Sheet1")
test_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Test Data.xlsx"),sheet="Sheet1")
# Filter out PMIDs that appear in any of the screened datasets
df_filtered <- final_df %>%
dplyr::filter(!PMID %in% c(training_screened_df$PMID,
dev_screened_df$PMID,
test_screened_df$PMID))
# Define file path
write_csv(df_filtered,paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Unattributable Data.csv")  )
### RE-STRUCTURING MESH DATA
rm(list=ls());gc();source(".Rprofile")
df <- readRDS(paste0(path_ep_folder,"/working/cleaned/epan03_mesh.RDS"))
# Concatenate DescriptorName for each pmid and change name to MeSH
df_combined <- df %>%
group_by(pmid) %>%
summarise(MeSH = paste(DescriptorName, collapse = ", "), .groups = 'drop')
# View new data
View(df_combined)
# Load RDS files
epan03_abstracts <- readRDS(paste0(path_ep_folder,"/working/cleaned/epan03_abstracts.RDS")) # Contains pmid and abstracts
epan03_titles <- readRDS(paste0(path_ep_folder,"/working/cleaned/epan03_titles.RDS")) # Contains pmid and titles
df_combined <- df_combined %>% distinct(pmid, .keep_all = TRUE)
epan03_titles <- epan03_titles %>% distinct(pmid, .keep_all = TRUE)
# Merge the three data frames on 'pmid'
final_df <- df_combined %>%
left_join(epan03_abstracts %>%
dplyr::select(pmid,abstract), by = "pmid") %>%
left_join(epan03_titles, by = "pmid") %>%
dplyr::filter(year >= 2010) %>%
mutate(across(everything(), ~replace(., . %in% c(NA, "NA"), "N/A"))) %>%
mutate(pmid = as.numeric(pmid)) %>%
rename(PMID = pmid,
Title = title,
Abstract = abstract)
### Remove training, dev, and test data duplicates
library(readxl)
# Load the three screened datasets from CSV files
training_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/Methods.xlsx"), sheet = "Training Data")
dev_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Development Data.xlsx"),sheet="Sheet1")
test_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Test Data.xlsx"),sheet="Sheet1")
# Filter out PMIDs that appear in any of the screened datasets
df_filtered <- final_df %>%
dplyr::filter(!PMID %in% c(training_screened_df$PMID,
dev_screened_df$PMID,
test_screened_df$PMID))
### RE-STRUCTURING MESH DATA
rm(list=ls());gc();source(".Rprofile")
# Load RDS file
df <- readRDS(paste0(path_ep_folder,"/working/cleaned/epan03_mesh.RDS"))
# Concatenate DescriptorName for each pmid and change name to MeSH
df_combined <- df %>%
group_by(pmid) %>%
summarise(MeSH = paste(DescriptorName, collapse = ", "), .groups = 'drop')
# View new data
View(df_combined)
# Save file -- no need of this!
# saveRDS(df_combined, "epan03_mesh_combined.rds")
### MERGING ALL 3 FILES
# Load RDS files
epan03_abstracts <- readRDS(paste0(path_ep_folder,"/working/cleaned/epan03_abstracts.RDS")) # Contains pmid and abstracts
epan03_titles <- readRDS(paste0(path_ep_folder,"/working/cleaned/epan03_titles.RDS")) # Contains pmid and titles
df_combined <- df_combined %>% distinct(pmid, .keep_all = TRUE)
epan03_titles <- epan03_titles %>% distinct(pmid, .keep_all = TRUE)
# Merge the three data frames on 'pmid'
final_df <- df_combined %>%
left_join(epan03_abstracts %>%
dplyr::select(pmid,abstract), by = "pmid") %>%
left_join(epan03_titles, by = "pmid") %>%
dplyr::filter(year >= 2010) %>%
mutate(across(everything(), ~replace(., . %in% c(NA, "NA"), "N/A"))) %>%
mutate(pmid = as.numeric(pmid)) %>%
rename(PMID = pmid,
Title = title,
Abstract = abstract)
### Remove training, dev, and test data duplicates
library(readxl)
# Load the three screened datasets from CSV files
training_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/Methods.xlsx"), sheet = "Training Data")
dev_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Development Data.xlsx"),sheet="Sheet1")
test_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Test Data.xlsx"),sheet="Sheet1")
# Filter out PMIDs that appear in any of the screened datasets
df_filtered <- final_df %>%
dplyr::filter(!PMID %in% c(training_screened_df$PMID,
dev_screened_df$PMID,
test_screened_df$PMID))
source(".Rprofile")
rm(list=ls());gc();source(".Rprofile")
fig_df = readxl::read_excel("preprocessing/dataset for figure 2.xlsx")
View(fig_df)
fig_df = readxl::read_excel("preprocessing/dataset for figure 2.xlsx") %>%
pivot_longer(cols=-Region,names_to="var",values_to="value")
View(fig_df)
fig2 <- fig_df %>%
ggplot(.,aes(x=Region,y=value,fill=var)) +
geom_col(position = position_dodge(width=0.9))
fig2
fig2 <- fig_df %>%
ggplot(.,aes(x=Region,y=value,fill=var)) +
geom_col(position = position_dodge(width=0.9)) +
theme_bw() +
xlab("") +
ylab("") +
scale_fill_manual(values=c("#F8BDA4","#A1C3AC"))
fig2
fig2 <- fig_df %>%
ggplot(.,aes(x=Region,y=value,fill=var)) +
geom_col(position = position_dodge(width=0.9)) +
theme_bw() +
xlab("") +
ylab("") +
scale_fill_manual(names="",values=c("#F8BDA4","#A1C3AC")) +
theme(legend.position="bottom")
fig2
fig2 <- fig_df %>%
ggplot(.,aes(x=Region,y=value,fill=var)) +
geom_col(position = position_dodge(width=0.9)) +
theme_bw() +
xlab("") +
ylab("") +
scale_fill_manual(name="",values=c("#F8BDA4","#A1C3AC")) +
theme(legend.position="bottom")
fig2
fig2 %>%
ggsave(.,filename=paste0(path_equity_precision_llm_folder,"/figures/column plot for disease burden.jpg"),width=8,height = 4)
source("C:/code/external/equity_precision_llm/paper/figure_column plot for disease burden and primary study.R", echo=TRUE)
source(".Rprofile")
test_data = readxl::read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Test Data.xlsx"))
View(test_data)
test_results = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/Test Scenario 4_results.csv"))
View(test_results)
test_results = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/Test Scenario 4_results.csv"),na = character())
View(test_results)
library(stringr)
View(test_results)
test_data = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/epl04_merged_test_data.csv"))
View(test_data)
test_data = readxl::read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Test Data.xlsx"))
View(test_data)
test_results = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/epl04_merged_test_data.csv"))
View(test_results)
test_results = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/epl04_merged_test_data.csv")) %>%
distinct(PMID)
test_results = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/epl04_merged_test_data.csv")) %>%
distinct(PMID,.keep_all = TRUE)
View(test_results)
with(test_results$orig_precision_medicine,test_results$gpt_precision_medicine)
table(test_results$orig_precision_medicine,test_results$gpt_precision_medicine)
(876+926)/(2076)
View(test_results)
test_data = readxl::read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Test Data.xlsx"))
test_results = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/epl04_merged_test_data.csv")) %>%
distinct(PMID,.keep_all = TRUE)
test_data = readxl::read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Test Data.xlsx")) %>%
distinct(PMID,.keep_all = TRUE)
unattributable_data = readxl::read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Unattributable Data.xlsx")) %>%
distinct(PMID,.keep_all = TRUE)
unattributable_data = readxl::read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Unattributable Data.csv")) %>%
distinct(PMID,.keep_all = TRUE)
unattributable_data = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Unattributable Data.csv"))
# 126953 -->
unattributable_data = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Unattributable Data.csv")) %>%
distinct(PMID,.keep_all = TRUE)
unattributable_results = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/epl05_merged unattributable data.csv")) %>%
distinct(PMID,.keep_all = TRUE)
test_data = readxl::read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Test Data.xlsx"))
# 2081 --> 2076
test_data = readxl::read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Test Data.xlsx")) %>%
distinct(PMID,.keep_all = TRUE)
test_results = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/epl04_merged_test_data.csv")) %>%
distinct(PMID,.keep_all = TRUE)
129157 - 120 - 2081
129157 - 120 - 2082
126952 + 120 + 2076
126952 + 2076 + 120
df <- readRDS(paste0(path_ep_folder,"/working/cleaned/epan03_mesh.RDS"))
epan03_titles <- readRDS(paste0(path_ep_folder,"/working/cleaned/epan03_titles.RDS")) # Contains pmid and titles
df <- readRDS(paste0(path_ep_folder,"/working/cleaned/epan03_mesh.RDS"))
# Concatenate DescriptorName for each pmid and change name to MeSH
df_combined <- df %>%
group_by(pmid) %>%
summarise(MeSH = paste(DescriptorName, collapse = ", "), .groups = 'drop')
# View new data
View(df_combined)
# Load RDS files
epan03_abstracts <- readRDS(paste0(path_ep_folder,"/working/cleaned/epan03_abstracts.RDS")) # Contains pmid and abstracts
epan03_titles <- readRDS(paste0(path_ep_folder,"/working/cleaned/epan03_titles.RDS")) # Contains pmid and titles
df_combined <- df_combined %>% distinct(pmid, .keep_all = TRUE)
epan03_titles <- epan03_titles %>% distinct(pmid, .keep_all = TRUE)
# Merge the three data frames on 'pmid'
final_df <- df_combined %>%
left_join(epan03_abstracts %>%
dplyr::select(pmid,abstract), by = "pmid") %>%
left_join(epan03_titles, by = "pmid") %>%
dplyr::filter(year >= 2010) %>%
mutate(across(everything(), ~replace(., . %in% c(NA, "NA"), "N/A"))) %>%
mutate(pmid = as.numeric(pmid)) %>%
rename(PMID = pmid,
Title = title,
Abstract = abstract)
### Remove training, dev, and test data duplicates
library(readxl)
# Load the three screened datasets from CSV files
training_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/Methods.xlsx"), sheet = "Training Data")
dev_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Development Data.xlsx"),sheet="Sheet1")
test_screened_df <- read_excel(paste0(path_equity_precision_llm_folder,"/llm training/epldat03_Test Data.xlsx"),sheet="Sheet1")
# Filter out PMIDs that appear in any of the screened datasets
df_filtered <- final_df %>%
dplyr::filter(!PMID %in% c(training_screened_df$PMID,
dev_screened_df$PMID,
test_screened_df$PMID))
View(final_df)
120 + 2081 + 16952
120 + 2081 + 126952
120 + 2081 + 126953
table(is.na(unattributable_data$Abstract))
View(unattributable_results)
# Not classified on any criteria
unattributable_results %>%
group_by(gpt_precision_medicine,gpt_diabetes,gpt_primary_study) %>%
tally() %>%
View()
step2 = unattributable_results %>%
dplyr::filter(!is.na(Abstract))
# Not classified on any criteria
step3 = step2 %>%
group_by(gpt_precision_medicine,gpt_diabetes,gpt_primary_study) %>%
tally() %>%
View()
test_results %>%
group_by(gpt_precision_medicine,gpt_diabetes,gpt_primary_study) %>%
tally() %>%
View()
# Training and Development -----
training_results = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/epl03_merged training data scenario 4.csv")) %>%
distinct(PMID,.keep_all = TRUE)
development_results = read_csv(paste0(path_equity_precision_llm_folder,"/llm training/epl03_merged development data scenario 4.csv")) %>%
distinct(PMID,.keep_all = TRUE)
eplan01 = bind_rows(
train_results %>% mutate(dataset = "Train"),
development_results %>% mutate(dataset = "Development"),
test_results %>% mutate(dataset = "Test"),
step2 %>% mutate(dataset = "Unattributable")) %>%
group_by(gpt_precision_medicine,gpt_diabetes,gpt_primary_study) %>%
tally() %>%
View()
source("C:/code/external/equity_precision_llm/analysis/eplan01_bias analysis of test data.R", echo=TRUE)
eplan01 = bind_rows(
train_results %>% mutate(dataset = "Train"),
development_results %>% mutate(dataset = "Development"),
test_results %>% mutate(dataset = "Test"),
step2 %>% mutate(dataset = "Unattributable")) %>%
group_by(gpt_precision_medicine,gpt_diabetes,gpt_primary_study) %>%
tally()
eplan01 = bind_rows(
training_results %>% mutate(dataset = "Train"),
development_results %>% mutate(dataset = "Development"),
test_results %>% mutate(dataset = "Test"),
step2 %>% mutate(dataset = "Unattributable")) %>%
group_by(gpt_precision_medicine,gpt_diabetes,gpt_primary_study) %>%
tally()
View(eplan01)
# Not classified on any criteria
step3 = step2 %>%
group_by(gpt_precision_medicine,gpt_diabetes,gpt_primary_study) %>%
tally() %>%
View()
125928 + 2201
125928 + 2196
125928 + 2196
View(eplan01)
View(eplan01)
eplan01 = bind_rows(
training_results %>% mutate(dataset = "Train"),
development_results %>% mutate(dataset = "Development"),
test_results %>% mutate(dataset = "Test"),
step2 %>% mutate(dataset = "Unattributable")) %>%
distinct(PMID,.keep_all=TRUE) %>%
group_by(gpt_precision_medicine,gpt_diabetes,gpt_primary_study) %>%
tally()
View(unattributable_data)
View(eplan01)
epl06 <- read_csv('preprocessing/epl06_manually screened.csv')
rm(list=ls());gc();source(".Rprofile")
epl06 <- read_csv('preprocessing/epl06_manually screened.csv')
View(epl06)
epl06_grouped <- read_csv('preprocessing/epl06_manually screened group.csv')
epl05 <- read_csv('preprocessing/epl05_combined_output_Unattributable.csv')
epl05_grouped <- read_csv('preprocessing/epl05_combined_output_Unattributable by group.csv')
View(epl05_grouped)
epl05 <- read_csv('preprocessing/epl05_combined_output_Unattributable.csv') %>%
separate(combined_category,into = c("pm","dm","ps"),sep = "_")
epl05_grouped <- read_csv('preprocessing/epl05_combined_output_Unattributable by group.csv') %>%
separate(combined_category,into = c("pm","dm","ps"),sep = "_")
epl06 <- read_csv('preprocessing/epl06_manually screened.csv') %>%
separate(combined_category,into = c("pm","dm","ps"),sep = "_")
epl06_grouped <- read_csv('preprocessing/epl06_manually screened group.csv') %>%
separate(combined_category,into = c("pm","dm","ps"),sep = "_")
View(epl06_grouped)
epl06 %>%
dplyr::filter(pm == "yes")
epl06_transposed = bind_rows(epl06 %>%
dplyr::filter(pm == "yes") %>%
summarize(across(Unknown:we,~sum(.))),
epl06 %>%
dplyr::filter(dm == "yes") %>%
summarize(across(Unknown:we,~sum(.))),
epl06 %>%
dplyr::filter(ps == "yes") %>%
summarize(across(Unknown:we,~sum(.))))
View(epl06_transposed)
epl06_transposed = bind_rows(epl06 %>%
dplyr::filter(pm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) %>%
mutate(type = "pm"),
epl06 %>%
dplyr::filter(dm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) %>%
mutate(type = "dm"),
epl06 %>%
dplyr::filter(ps == "yes") %>%
summarize(across(Unknown:we,~sum(.)))%>%
mutate(type = "ps")) %>%
t()
epl06_transposed = bind_rows(epl06 %>%
dplyr::filter(pm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(dm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(ps == "yes") %>%
summarize(across(Unknown:we,~sum(.)))) %>%
T() %>%
rename(pm = V1,
dm = V2,
ps = V3)
epl06_transposed = bind_rows(epl06 %>%
dplyr::filter(pm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(dm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(ps == "yes") %>%
summarize(across(Unknown:we,~sum(.)))) %>%
t() %>%
rename(pm = V1,
dm = V2,
ps = V3)
epl06_transposed = bind_rows(epl06 %>%
dplyr::filter(pm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(dm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(ps == "yes") %>%
summarize(across(Unknown:we,~sum(.)))) %>%
t() %>% data.frame() %>%
rename(pm = V1,
dm = V2,
ps = V3)
epl06_transposed = bind_rows(epl06 %>%
dplyr::filter(pm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(dm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(ps == "yes") %>%
summarize(across(Unknown:we,~sum(.)))) %>%
t()
bind_rows(epl06 %>%
dplyr::filter(pm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(dm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(ps == "yes") %>%
summarize(across(Unknown:we,~sum(.)))) %>%
t() %>% data.frame()
epl06_transposed = bind_rows(epl06 %>%
dplyr::filter(pm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(dm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(ps == "yes") %>%
summarize(across(Unknown:we,~sum(.)))) %>%
t() %>% data.frame() %>%
rename(r = rownames(.),
pm = X1,
dm = X2,
ps = X3)
epl06_transposed = bind_rows(epl06 %>%
dplyr::filter(pm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(dm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06 %>%
dplyr::filter(ps == "yes") %>%
summarize(across(Unknown:we,~sum(.)))) %>%
t() %>% data.frame() %>%
mutate(r = rownames(.)) %>%
rename(
pm = X1,
dm = X2,
ps = X3)
View(epl06_transposed)
epl05_transposed = bind_rows(epl05 %>%
dplyr::filter(pm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl05 %>%
dplyr::filter(dm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl05 %>%
dplyr::filter(ps == "yes") %>%
summarize(across(Unknown:we,~sum(.)))) %>%
t() %>% data.frame() %>%
mutate(r = rownames(.)) %>%
rename(
pm = X1,
dm = X2,
ps = X3)
View(epl05_transposed)
write_csv(epl06_transposed,"paper/table_distribution of studies for manual")
write_csv(epl05_transposed,"paper/table_distribution of studies for unattributable")
source("C:/code/external/equity_precision_llm/paper/table_distribution of studies.R", echo=TRUE)
epl06_grouped_transposed = bind_rows(epl06_grouped %>%
dplyr::filter(pm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06_grouped %>%
dplyr::filter(dm == "yes") %>%
summarize(across(Unknown:we,~sum(.))) ,
epl06_grouped %>%
dplyr::filter(ps == "yes") %>%
summarize(across(Unknown:we,~sum(.)))) %>%
t() %>% data.frame() %>%
mutate(r = rownames(.)) %>%
rename(
pm = X1,
dm = X2,
ps = X3)
View(epl06_grouped)
epl06_grouped_transposed = bind_rows(epl06_grouped %>%
dplyr::filter(pm == "yes") %>%
summarize(across(one_of("European","Non-European"),~sum(.))) ,
epl06_grouped %>%
dplyr::filter(dm == "yes") %>%
summarize(across(one_of("European","Non-European"),~sum(.))) ,
epl06_grouped %>%
dplyr::filter(ps == "yes") %>%
summarize(across(one_of("European","Non-European"),~sum(.)))) %>%
t() %>% data.frame() %>%
mutate(r = rownames(.)) %>%
rename(
pm = X1,
dm = X2,
ps = X3)
View(epl06_grouped_transposed)
epl05_grouped_transposed = bind_rows(epl05_grouped %>%
dplyr::filter(pm == "yes") %>%
summarize(across(one_of("European","Non-European"),~sum(.))) ,
epl05_grouped %>%
dplyr::filter(dm == "yes") %>%
summarize(across(one_of("European","Non-European"),~sum(.))) ,
epl05_grouped %>%
dplyr::filter(ps == "yes") %>%
summarize(across(one_of("European","Non-European"),~sum(.)))) %>%
t() %>% data.frame() %>%
mutate(r = rownames(.)) %>%
rename(
pm = X1,
dm = X2,
ps = X3)
write_csv(epl06_grouped_transposed,"paper/table_distribution of studies for manual grouped.csv")
write_csv(epl05_grouped_transposed,"paper/table_distribution of studies for unattributable grouped.csv")
View(epl06_grouped)
View(epl05_grouped_transposed)
View(epl05_transposed)
View(epl05_grouped)
